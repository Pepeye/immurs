/*
 * immudb REST API
 *
 * <b>IMPORTANT</b>: All <code>get</code> and <code>safeget</code> functions return <u>base64-encoded</u> keys and values, while all <code>set</code> and <code>safeset</code> functions expect <u>base64-encoded</u> inputs.
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SchemaUser {
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<String>,
    #[serde(rename = "permissions", skip_serializing_if = "Option::is_none")]
    pub permissions: Option<Vec<crate::models::SchemaPermission>>,
    #[serde(rename = "createdby", skip_serializing_if = "Option::is_none")]
    pub createdby: Option<String>,
    #[serde(rename = "createdat", skip_serializing_if = "Option::is_none")]
    pub createdat: Option<String>,
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
}

impl SchemaUser {
    pub fn new() -> SchemaUser {
        SchemaUser {
            user: None,
            permissions: None,
            createdby: None,
            createdat: None,
            active: None,
        }
    }
}


