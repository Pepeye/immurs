/*
 * immudb REST API
 *
 * <b>IMPORTANT</b>: All <code>get</code> and <code>safeget</code> functions return <u>base64-encoded</u> keys and values, while all <code>set</code> and <code>safeset</code> functions expect <u>base64-encoded</u> inputs.
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SchemaSqlExecResult {
    #[serde(rename = "ctxs", skip_serializing_if = "Option::is_none")]
    pub ctxs: Option<Vec<crate::models::SchemaTxMetadata>>,
    #[serde(rename = "dtxs", skip_serializing_if = "Option::is_none")]
    pub dtxs: Option<Vec<crate::models::SchemaTxMetadata>>,
    #[serde(rename = "updatedRows", skip_serializing_if = "Option::is_none")]
    pub updated_rows: Option<i64>,
    #[serde(rename = "lastInsertedPKs", skip_serializing_if = "Option::is_none")]
    pub last_inserted_pks: Option<::std::collections::HashMap<String, crate::models::SchemaSqlValue>>,
}

impl SchemaSqlExecResult {
    pub fn new() -> SchemaSqlExecResult {
        SchemaSqlExecResult {
            ctxs: None,
            dtxs: None,
            updated_rows: None,
            last_inserted_pks: None,
        }
    }
}


