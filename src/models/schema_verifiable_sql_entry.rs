/*
 * immudb REST API
 *
 * <b>IMPORTANT</b>: All <code>get</code> and <code>safeget</code> functions return <u>base64-encoded</u> keys and values, while all <code>set</code> and <code>safeset</code> functions expect <u>base64-encoded</u> inputs.
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SchemaVerifiableSqlEntry {
    #[serde(rename = "sqlEntry", skip_serializing_if = "Option::is_none")]
    pub sql_entry: Option<Box<crate::models::SchemaSqlEntry>>,
    #[serde(rename = "verifiableTx", skip_serializing_if = "Option::is_none")]
    pub verifiable_tx: Option<Box<crate::models::SchemaVerifiableTx>>,
    #[serde(rename = "inclusionProof", skip_serializing_if = "Option::is_none")]
    pub inclusion_proof: Option<Box<crate::models::SchemaInclusionProof>>,
    #[serde(rename = "DatabaseId", skip_serializing_if = "Option::is_none")]
    pub database_id: Option<i64>,
    #[serde(rename = "TableId", skip_serializing_if = "Option::is_none")]
    pub table_id: Option<i64>,
    #[serde(rename = "PKIDs", skip_serializing_if = "Option::is_none")]
    pub pkids: Option<Vec<i64>>,
    #[serde(rename = "ColNamesById", skip_serializing_if = "Option::is_none")]
    pub col_names_by_id: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "ColIdsByName", skip_serializing_if = "Option::is_none")]
    pub col_ids_by_name: Option<::std::collections::HashMap<String, i64>>,
    #[serde(rename = "ColTypesById", skip_serializing_if = "Option::is_none")]
    pub col_types_by_id: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "ColLenById", skip_serializing_if = "Option::is_none")]
    pub col_len_by_id: Option<::std::collections::HashMap<String, i32>>,
}

impl SchemaVerifiableSqlEntry {
    pub fn new() -> SchemaVerifiableSqlEntry {
        SchemaVerifiableSqlEntry {
            sql_entry: None,
            verifiable_tx: None,
            inclusion_proof: None,
            database_id: None,
            table_id: None,
            pkids: None,
            col_names_by_id: None,
            col_ids_by_name: None,
            col_types_by_id: None,
            col_len_by_id: None,
        }
    }
}


